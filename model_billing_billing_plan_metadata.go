/*
Ledgera API

teste

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the BillingBillingPlanMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingBillingPlanMetadata{}

// BillingBillingPlanMetadata struct for BillingBillingPlanMetadata
type BillingBillingPlanMetadata struct {
	Transactions []BillingBillingTransaction `json:"transactions,omitempty"`
}

// NewBillingBillingPlanMetadata instantiates a new BillingBillingPlanMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingBillingPlanMetadata() *BillingBillingPlanMetadata {
	this := BillingBillingPlanMetadata{}
	return &this
}

// NewBillingBillingPlanMetadataWithDefaults instantiates a new BillingBillingPlanMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingBillingPlanMetadataWithDefaults() *BillingBillingPlanMetadata {
	this := BillingBillingPlanMetadata{}
	return &this
}

// GetTransactions returns the Transactions field value if set, zero value otherwise.
func (o *BillingBillingPlanMetadata) GetTransactions() []BillingBillingTransaction {
	if o == nil || IsNil(o.Transactions) {
		var ret []BillingBillingTransaction
		return ret
	}
	return o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingBillingPlanMetadata) GetTransactionsOk() ([]BillingBillingTransaction, bool) {
	if o == nil || IsNil(o.Transactions) {
		return nil, false
	}
	return o.Transactions, true
}

// HasTransactions returns a boolean if a field has been set.
func (o *BillingBillingPlanMetadata) HasTransactions() bool {
	if o != nil && !IsNil(o.Transactions) {
		return true
	}

	return false
}

// SetTransactions gets a reference to the given []BillingBillingTransaction and assigns it to the Transactions field.
func (o *BillingBillingPlanMetadata) SetTransactions(v []BillingBillingTransaction) {
	o.Transactions = v
}

func (o BillingBillingPlanMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingBillingPlanMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Transactions) {
		toSerialize["transactions"] = o.Transactions
	}
	return toSerialize, nil
}

type NullableBillingBillingPlanMetadata struct {
	value *BillingBillingPlanMetadata
	isSet bool
}

func (v NullableBillingBillingPlanMetadata) Get() *BillingBillingPlanMetadata {
	return v.value
}

func (v *NullableBillingBillingPlanMetadata) Set(val *BillingBillingPlanMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingBillingPlanMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingBillingPlanMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingBillingPlanMetadata(val *BillingBillingPlanMetadata) *NullableBillingBillingPlanMetadata {
	return &NullableBillingBillingPlanMetadata{value: val, isSet: true}
}

func (v NullableBillingBillingPlanMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingBillingPlanMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



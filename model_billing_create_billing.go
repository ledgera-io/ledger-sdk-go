/*
Ledgera core API

Ledgera servers.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the BillingCreateBilling type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingCreateBilling{}

// BillingCreateBilling struct for BillingCreateBilling
type BillingCreateBilling struct {
	Description *string `json:"description,omitempty"`
	Entries []BillingTransactionEntry `json:"entries"`
	Expiration string `json:"expiration"`
	IsDefault *bool `json:"isDefault,omitempty"`
	Name string `json:"name"`
}

// NewBillingCreateBilling instantiates a new BillingCreateBilling object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingCreateBilling(entries []BillingTransactionEntry, expiration string, name string) *BillingCreateBilling {
	this := BillingCreateBilling{}
	this.Entries = entries
	this.Expiration = expiration
	this.Name = name
	return &this
}

// NewBillingCreateBillingWithDefaults instantiates a new BillingCreateBilling object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingCreateBillingWithDefaults() *BillingCreateBilling {
	this := BillingCreateBilling{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BillingCreateBilling) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingCreateBilling) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BillingCreateBilling) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BillingCreateBilling) SetDescription(v string) {
	o.Description = &v
}

// GetEntries returns the Entries field value
func (o *BillingCreateBilling) GetEntries() []BillingTransactionEntry {
	if o == nil {
		var ret []BillingTransactionEntry
		return ret
	}

	return o.Entries
}

// GetEntriesOk returns a tuple with the Entries field value
// and a boolean to check if the value has been set.
func (o *BillingCreateBilling) GetEntriesOk() ([]BillingTransactionEntry, bool) {
	if o == nil {
		return nil, false
	}
	return o.Entries, true
}

// SetEntries sets field value
func (o *BillingCreateBilling) SetEntries(v []BillingTransactionEntry) {
	o.Entries = v
}

// GetExpiration returns the Expiration field value
func (o *BillingCreateBilling) GetExpiration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value
// and a boolean to check if the value has been set.
func (o *BillingCreateBilling) GetExpirationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expiration, true
}

// SetExpiration sets field value
func (o *BillingCreateBilling) SetExpiration(v string) {
	o.Expiration = v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *BillingCreateBilling) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingCreateBilling) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *BillingCreateBilling) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *BillingCreateBilling) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetName returns the Name field value
func (o *BillingCreateBilling) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BillingCreateBilling) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BillingCreateBilling) SetName(v string) {
	o.Name = v
}

func (o BillingCreateBilling) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingCreateBilling) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["entries"] = o.Entries
	toSerialize["expiration"] = o.Expiration
	if !IsNil(o.IsDefault) {
		toSerialize["isDefault"] = o.IsDefault
	}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableBillingCreateBilling struct {
	value *BillingCreateBilling
	isSet bool
}

func (v NullableBillingCreateBilling) Get() *BillingCreateBilling {
	return v.value
}

func (v *NullableBillingCreateBilling) Set(val *BillingCreateBilling) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingCreateBilling) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingCreateBilling) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingCreateBilling(val *BillingCreateBilling) *NullableBillingCreateBilling {
	return &NullableBillingCreateBilling{value: val, isSet: true}
}

func (v NullableBillingCreateBilling) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingCreateBilling) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



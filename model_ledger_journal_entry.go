/*
Ledgera

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the LedgerJournalEntry type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LedgerJournalEntry{}

// LedgerJournalEntry struct for LedgerJournalEntry
type LedgerJournalEntry struct {
	AccountId *string `json:"accountId,omitempty"`
	AccountSubType *string `json:"accountSubType,omitempty"`
	AccountType *string `json:"accountType,omitempty"`
	Amount *float32 `json:"amount,omitempty"`
	BalanceAfter *float32 `json:"balanceAfter,omitempty"`
	BalanceType *string `json:"balanceType,omitempty"`
	ConciliationId *string `json:"conciliationId,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	Currency *string `json:"currency,omitempty"`
	EntryId *string `json:"entryId,omitempty"`
	EntryLabel *string `json:"entryLabel,omitempty"`
	EntryOrder *int32 `json:"entryOrder,omitempty"`
	Id *string `json:"id,omitempty"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	ProcessType *string `json:"processType,omitempty"`
	SeqNum *int32 `json:"seqNum,omitempty"`
	SettledAt *string `json:"settledAt,omitempty"`
	TransactionId *string `json:"transactionId,omitempty"`
	TransactionType *string `json:"transactionType,omitempty"`
}

// NewLedgerJournalEntry instantiates a new LedgerJournalEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLedgerJournalEntry() *LedgerJournalEntry {
	this := LedgerJournalEntry{}
	return &this
}

// NewLedgerJournalEntryWithDefaults instantiates a new LedgerJournalEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLedgerJournalEntryWithDefaults() *LedgerJournalEntry {
	this := LedgerJournalEntry{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *LedgerJournalEntry) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerJournalEntry) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *LedgerJournalEntry) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *LedgerJournalEntry) SetAccountId(v string) {
	o.AccountId = &v
}

// GetAccountSubType returns the AccountSubType field value if set, zero value otherwise.
func (o *LedgerJournalEntry) GetAccountSubType() string {
	if o == nil || IsNil(o.AccountSubType) {
		var ret string
		return ret
	}
	return *o.AccountSubType
}

// GetAccountSubTypeOk returns a tuple with the AccountSubType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerJournalEntry) GetAccountSubTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AccountSubType) {
		return nil, false
	}
	return o.AccountSubType, true
}

// HasAccountSubType returns a boolean if a field has been set.
func (o *LedgerJournalEntry) HasAccountSubType() bool {
	if o != nil && !IsNil(o.AccountSubType) {
		return true
	}

	return false
}

// SetAccountSubType gets a reference to the given string and assigns it to the AccountSubType field.
func (o *LedgerJournalEntry) SetAccountSubType(v string) {
	o.AccountSubType = &v
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *LedgerJournalEntry) GetAccountType() string {
	if o == nil || IsNil(o.AccountType) {
		var ret string
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerJournalEntry) GetAccountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AccountType) {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *LedgerJournalEntry) HasAccountType() bool {
	if o != nil && !IsNil(o.AccountType) {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given string and assigns it to the AccountType field.
func (o *LedgerJournalEntry) SetAccountType(v string) {
	o.AccountType = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *LedgerJournalEntry) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerJournalEntry) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *LedgerJournalEntry) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *LedgerJournalEntry) SetAmount(v float32) {
	o.Amount = &v
}

// GetBalanceAfter returns the BalanceAfter field value if set, zero value otherwise.
func (o *LedgerJournalEntry) GetBalanceAfter() float32 {
	if o == nil || IsNil(o.BalanceAfter) {
		var ret float32
		return ret
	}
	return *o.BalanceAfter
}

// GetBalanceAfterOk returns a tuple with the BalanceAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerJournalEntry) GetBalanceAfterOk() (*float32, bool) {
	if o == nil || IsNil(o.BalanceAfter) {
		return nil, false
	}
	return o.BalanceAfter, true
}

// HasBalanceAfter returns a boolean if a field has been set.
func (o *LedgerJournalEntry) HasBalanceAfter() bool {
	if o != nil && !IsNil(o.BalanceAfter) {
		return true
	}

	return false
}

// SetBalanceAfter gets a reference to the given float32 and assigns it to the BalanceAfter field.
func (o *LedgerJournalEntry) SetBalanceAfter(v float32) {
	o.BalanceAfter = &v
}

// GetBalanceType returns the BalanceType field value if set, zero value otherwise.
func (o *LedgerJournalEntry) GetBalanceType() string {
	if o == nil || IsNil(o.BalanceType) {
		var ret string
		return ret
	}
	return *o.BalanceType
}

// GetBalanceTypeOk returns a tuple with the BalanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerJournalEntry) GetBalanceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BalanceType) {
		return nil, false
	}
	return o.BalanceType, true
}

// HasBalanceType returns a boolean if a field has been set.
func (o *LedgerJournalEntry) HasBalanceType() bool {
	if o != nil && !IsNil(o.BalanceType) {
		return true
	}

	return false
}

// SetBalanceType gets a reference to the given string and assigns it to the BalanceType field.
func (o *LedgerJournalEntry) SetBalanceType(v string) {
	o.BalanceType = &v
}

// GetConciliationId returns the ConciliationId field value if set, zero value otherwise.
func (o *LedgerJournalEntry) GetConciliationId() string {
	if o == nil || IsNil(o.ConciliationId) {
		var ret string
		return ret
	}
	return *o.ConciliationId
}

// GetConciliationIdOk returns a tuple with the ConciliationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerJournalEntry) GetConciliationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConciliationId) {
		return nil, false
	}
	return o.ConciliationId, true
}

// HasConciliationId returns a boolean if a field has been set.
func (o *LedgerJournalEntry) HasConciliationId() bool {
	if o != nil && !IsNil(o.ConciliationId) {
		return true
	}

	return false
}

// SetConciliationId gets a reference to the given string and assigns it to the ConciliationId field.
func (o *LedgerJournalEntry) SetConciliationId(v string) {
	o.ConciliationId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *LedgerJournalEntry) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerJournalEntry) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *LedgerJournalEntry) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *LedgerJournalEntry) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *LedgerJournalEntry) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerJournalEntry) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *LedgerJournalEntry) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *LedgerJournalEntry) SetCurrency(v string) {
	o.Currency = &v
}

// GetEntryId returns the EntryId field value if set, zero value otherwise.
func (o *LedgerJournalEntry) GetEntryId() string {
	if o == nil || IsNil(o.EntryId) {
		var ret string
		return ret
	}
	return *o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerJournalEntry) GetEntryIdOk() (*string, bool) {
	if o == nil || IsNil(o.EntryId) {
		return nil, false
	}
	return o.EntryId, true
}

// HasEntryId returns a boolean if a field has been set.
func (o *LedgerJournalEntry) HasEntryId() bool {
	if o != nil && !IsNil(o.EntryId) {
		return true
	}

	return false
}

// SetEntryId gets a reference to the given string and assigns it to the EntryId field.
func (o *LedgerJournalEntry) SetEntryId(v string) {
	o.EntryId = &v
}

// GetEntryLabel returns the EntryLabel field value if set, zero value otherwise.
func (o *LedgerJournalEntry) GetEntryLabel() string {
	if o == nil || IsNil(o.EntryLabel) {
		var ret string
		return ret
	}
	return *o.EntryLabel
}

// GetEntryLabelOk returns a tuple with the EntryLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerJournalEntry) GetEntryLabelOk() (*string, bool) {
	if o == nil || IsNil(o.EntryLabel) {
		return nil, false
	}
	return o.EntryLabel, true
}

// HasEntryLabel returns a boolean if a field has been set.
func (o *LedgerJournalEntry) HasEntryLabel() bool {
	if o != nil && !IsNil(o.EntryLabel) {
		return true
	}

	return false
}

// SetEntryLabel gets a reference to the given string and assigns it to the EntryLabel field.
func (o *LedgerJournalEntry) SetEntryLabel(v string) {
	o.EntryLabel = &v
}

// GetEntryOrder returns the EntryOrder field value if set, zero value otherwise.
func (o *LedgerJournalEntry) GetEntryOrder() int32 {
	if o == nil || IsNil(o.EntryOrder) {
		var ret int32
		return ret
	}
	return *o.EntryOrder
}

// GetEntryOrderOk returns a tuple with the EntryOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerJournalEntry) GetEntryOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.EntryOrder) {
		return nil, false
	}
	return o.EntryOrder, true
}

// HasEntryOrder returns a boolean if a field has been set.
func (o *LedgerJournalEntry) HasEntryOrder() bool {
	if o != nil && !IsNil(o.EntryOrder) {
		return true
	}

	return false
}

// SetEntryOrder gets a reference to the given int32 and assigns it to the EntryOrder field.
func (o *LedgerJournalEntry) SetEntryOrder(v int32) {
	o.EntryOrder = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LedgerJournalEntry) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerJournalEntry) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LedgerJournalEntry) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *LedgerJournalEntry) SetId(v string) {
	o.Id = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *LedgerJournalEntry) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerJournalEntry) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *LedgerJournalEntry) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *LedgerJournalEntry) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetProcessType returns the ProcessType field value if set, zero value otherwise.
func (o *LedgerJournalEntry) GetProcessType() string {
	if o == nil || IsNil(o.ProcessType) {
		var ret string
		return ret
	}
	return *o.ProcessType
}

// GetProcessTypeOk returns a tuple with the ProcessType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerJournalEntry) GetProcessTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProcessType) {
		return nil, false
	}
	return o.ProcessType, true
}

// HasProcessType returns a boolean if a field has been set.
func (o *LedgerJournalEntry) HasProcessType() bool {
	if o != nil && !IsNil(o.ProcessType) {
		return true
	}

	return false
}

// SetProcessType gets a reference to the given string and assigns it to the ProcessType field.
func (o *LedgerJournalEntry) SetProcessType(v string) {
	o.ProcessType = &v
}

// GetSeqNum returns the SeqNum field value if set, zero value otherwise.
func (o *LedgerJournalEntry) GetSeqNum() int32 {
	if o == nil || IsNil(o.SeqNum) {
		var ret int32
		return ret
	}
	return *o.SeqNum
}

// GetSeqNumOk returns a tuple with the SeqNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerJournalEntry) GetSeqNumOk() (*int32, bool) {
	if o == nil || IsNil(o.SeqNum) {
		return nil, false
	}
	return o.SeqNum, true
}

// HasSeqNum returns a boolean if a field has been set.
func (o *LedgerJournalEntry) HasSeqNum() bool {
	if o != nil && !IsNil(o.SeqNum) {
		return true
	}

	return false
}

// SetSeqNum gets a reference to the given int32 and assigns it to the SeqNum field.
func (o *LedgerJournalEntry) SetSeqNum(v int32) {
	o.SeqNum = &v
}

// GetSettledAt returns the SettledAt field value if set, zero value otherwise.
func (o *LedgerJournalEntry) GetSettledAt() string {
	if o == nil || IsNil(o.SettledAt) {
		var ret string
		return ret
	}
	return *o.SettledAt
}

// GetSettledAtOk returns a tuple with the SettledAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerJournalEntry) GetSettledAtOk() (*string, bool) {
	if o == nil || IsNil(o.SettledAt) {
		return nil, false
	}
	return o.SettledAt, true
}

// HasSettledAt returns a boolean if a field has been set.
func (o *LedgerJournalEntry) HasSettledAt() bool {
	if o != nil && !IsNil(o.SettledAt) {
		return true
	}

	return false
}

// SetSettledAt gets a reference to the given string and assigns it to the SettledAt field.
func (o *LedgerJournalEntry) SetSettledAt(v string) {
	o.SettledAt = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *LedgerJournalEntry) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerJournalEntry) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *LedgerJournalEntry) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *LedgerJournalEntry) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetTransactionType returns the TransactionType field value if set, zero value otherwise.
func (o *LedgerJournalEntry) GetTransactionType() string {
	if o == nil || IsNil(o.TransactionType) {
		var ret string
		return ret
	}
	return *o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerJournalEntry) GetTransactionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionType) {
		return nil, false
	}
	return o.TransactionType, true
}

// HasTransactionType returns a boolean if a field has been set.
func (o *LedgerJournalEntry) HasTransactionType() bool {
	if o != nil && !IsNil(o.TransactionType) {
		return true
	}

	return false
}

// SetTransactionType gets a reference to the given string and assigns it to the TransactionType field.
func (o *LedgerJournalEntry) SetTransactionType(v string) {
	o.TransactionType = &v
}

func (o LedgerJournalEntry) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LedgerJournalEntry) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.AccountSubType) {
		toSerialize["accountSubType"] = o.AccountSubType
	}
	if !IsNil(o.AccountType) {
		toSerialize["accountType"] = o.AccountType
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.BalanceAfter) {
		toSerialize["balanceAfter"] = o.BalanceAfter
	}
	if !IsNil(o.BalanceType) {
		toSerialize["balanceType"] = o.BalanceType
	}
	if !IsNil(o.ConciliationId) {
		toSerialize["conciliationId"] = o.ConciliationId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.EntryId) {
		toSerialize["entryId"] = o.EntryId
	}
	if !IsNil(o.EntryLabel) {
		toSerialize["entryLabel"] = o.EntryLabel
	}
	if !IsNil(o.EntryOrder) {
		toSerialize["entryOrder"] = o.EntryOrder
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.ProcessType) {
		toSerialize["processType"] = o.ProcessType
	}
	if !IsNil(o.SeqNum) {
		toSerialize["seqNum"] = o.SeqNum
	}
	if !IsNil(o.SettledAt) {
		toSerialize["settledAt"] = o.SettledAt
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	if !IsNil(o.TransactionType) {
		toSerialize["transactionType"] = o.TransactionType
	}
	return toSerialize, nil
}

type NullableLedgerJournalEntry struct {
	value *LedgerJournalEntry
	isSet bool
}

func (v NullableLedgerJournalEntry) Get() *LedgerJournalEntry {
	return v.value
}

func (v *NullableLedgerJournalEntry) Set(val *LedgerJournalEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableLedgerJournalEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableLedgerJournalEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLedgerJournalEntry(val *LedgerJournalEntry) *NullableLedgerJournalEntry {
	return &NullableLedgerJournalEntry{value: val, isSet: true}
}

func (v NullableLedgerJournalEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLedgerJournalEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



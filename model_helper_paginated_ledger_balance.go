/*
Ledgera API

teste

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the HelperPaginatedLedgerBalance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HelperPaginatedLedgerBalance{}

// HelperPaginatedLedgerBalance struct for HelperPaginatedLedgerBalance
type HelperPaginatedLedgerBalance struct {
	Data *LedgerBalance `json:"data,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
}

// NewHelperPaginatedLedgerBalance instantiates a new HelperPaginatedLedgerBalance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHelperPaginatedLedgerBalance() *HelperPaginatedLedgerBalance {
	this := HelperPaginatedLedgerBalance{}
	return &this
}

// NewHelperPaginatedLedgerBalanceWithDefaults instantiates a new HelperPaginatedLedgerBalance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHelperPaginatedLedgerBalanceWithDefaults() *HelperPaginatedLedgerBalance {
	this := HelperPaginatedLedgerBalance{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *HelperPaginatedLedgerBalance) GetData() LedgerBalance {
	if o == nil || IsNil(o.Data) {
		var ret LedgerBalance
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelperPaginatedLedgerBalance) GetDataOk() (*LedgerBalance, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *HelperPaginatedLedgerBalance) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given LedgerBalance and assigns it to the Data field.
func (o *HelperPaginatedLedgerBalance) SetData(v LedgerBalance) {
	o.Data = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *HelperPaginatedLedgerBalance) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelperPaginatedLedgerBalance) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *HelperPaginatedLedgerBalance) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *HelperPaginatedLedgerBalance) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

func (o HelperPaginatedLedgerBalance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HelperPaginatedLedgerBalance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableHelperPaginatedLedgerBalance struct {
	value *HelperPaginatedLedgerBalance
	isSet bool
}

func (v NullableHelperPaginatedLedgerBalance) Get() *HelperPaginatedLedgerBalance {
	return v.value
}

func (v *NullableHelperPaginatedLedgerBalance) Set(val *HelperPaginatedLedgerBalance) {
	v.value = val
	v.isSet = true
}

func (v NullableHelperPaginatedLedgerBalance) IsSet() bool {
	return v.isSet
}

func (v *NullableHelperPaginatedLedgerBalance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHelperPaginatedLedgerBalance(val *HelperPaginatedLedgerBalance) *NullableHelperPaginatedLedgerBalance {
	return &NullableHelperPaginatedLedgerBalance{value: val, isSet: true}
}

func (v NullableHelperPaginatedLedgerBalance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHelperPaginatedLedgerBalance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



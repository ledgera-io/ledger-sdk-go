/*
Ledgera

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the LedgerTransactionRuleParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LedgerTransactionRuleParams{}

// LedgerTransactionRuleParams struct for LedgerTransactionRuleParams
type LedgerTransactionRuleParams struct {
	CreditAccountBalanceType string `json:"creditAccountBalanceType"`
	CreditAccountSubType string `json:"creditAccountSubType"`
	CreditAccountType string `json:"creditAccountType"`
	DebitAccountBalanceType string `json:"debitAccountBalanceType"`
	DebitAccountSubType string `json:"debitAccountSubType"`
	DebitAccountType string `json:"debitAccountType"`
	EntryOrder int32 `json:"entryOrder"`
	EntryType string `json:"entryType"`
	MessageType LedgerMessageType `json:"messageType"`
	ParamAccount1Subtype *string `json:"paramAccount1Subtype,omitempty"`
	ParamAccount1Type *string `json:"paramAccount1Type,omitempty"`
	ParamAccount2Subtype *string `json:"paramAccount2Subtype,omitempty"`
	ParamAccount2Type *string `json:"paramAccount2Type,omitempty"`
	ProcessType LedgerProcessType `json:"processType"`
	TransactionType string `json:"transactionType"`
}

// NewLedgerTransactionRuleParams instantiates a new LedgerTransactionRuleParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLedgerTransactionRuleParams(creditAccountBalanceType string, creditAccountSubType string, creditAccountType string, debitAccountBalanceType string, debitAccountSubType string, debitAccountType string, entryOrder int32, entryType string, messageType LedgerMessageType, processType LedgerProcessType, transactionType string) *LedgerTransactionRuleParams {
	this := LedgerTransactionRuleParams{}
	this.CreditAccountBalanceType = creditAccountBalanceType
	this.CreditAccountSubType = creditAccountSubType
	this.CreditAccountType = creditAccountType
	this.DebitAccountBalanceType = debitAccountBalanceType
	this.DebitAccountSubType = debitAccountSubType
	this.DebitAccountType = debitAccountType
	this.EntryOrder = entryOrder
	this.EntryType = entryType
	this.MessageType = messageType
	this.ProcessType = processType
	this.TransactionType = transactionType
	return &this
}

// NewLedgerTransactionRuleParamsWithDefaults instantiates a new LedgerTransactionRuleParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLedgerTransactionRuleParamsWithDefaults() *LedgerTransactionRuleParams {
	this := LedgerTransactionRuleParams{}
	return &this
}

// GetCreditAccountBalanceType returns the CreditAccountBalanceType field value
func (o *LedgerTransactionRuleParams) GetCreditAccountBalanceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreditAccountBalanceType
}

// GetCreditAccountBalanceTypeOk returns a tuple with the CreditAccountBalanceType field value
// and a boolean to check if the value has been set.
func (o *LedgerTransactionRuleParams) GetCreditAccountBalanceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreditAccountBalanceType, true
}

// SetCreditAccountBalanceType sets field value
func (o *LedgerTransactionRuleParams) SetCreditAccountBalanceType(v string) {
	o.CreditAccountBalanceType = v
}

// GetCreditAccountSubType returns the CreditAccountSubType field value
func (o *LedgerTransactionRuleParams) GetCreditAccountSubType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreditAccountSubType
}

// GetCreditAccountSubTypeOk returns a tuple with the CreditAccountSubType field value
// and a boolean to check if the value has been set.
func (o *LedgerTransactionRuleParams) GetCreditAccountSubTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreditAccountSubType, true
}

// SetCreditAccountSubType sets field value
func (o *LedgerTransactionRuleParams) SetCreditAccountSubType(v string) {
	o.CreditAccountSubType = v
}

// GetCreditAccountType returns the CreditAccountType field value
func (o *LedgerTransactionRuleParams) GetCreditAccountType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreditAccountType
}

// GetCreditAccountTypeOk returns a tuple with the CreditAccountType field value
// and a boolean to check if the value has been set.
func (o *LedgerTransactionRuleParams) GetCreditAccountTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreditAccountType, true
}

// SetCreditAccountType sets field value
func (o *LedgerTransactionRuleParams) SetCreditAccountType(v string) {
	o.CreditAccountType = v
}

// GetDebitAccountBalanceType returns the DebitAccountBalanceType field value
func (o *LedgerTransactionRuleParams) GetDebitAccountBalanceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DebitAccountBalanceType
}

// GetDebitAccountBalanceTypeOk returns a tuple with the DebitAccountBalanceType field value
// and a boolean to check if the value has been set.
func (o *LedgerTransactionRuleParams) GetDebitAccountBalanceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DebitAccountBalanceType, true
}

// SetDebitAccountBalanceType sets field value
func (o *LedgerTransactionRuleParams) SetDebitAccountBalanceType(v string) {
	o.DebitAccountBalanceType = v
}

// GetDebitAccountSubType returns the DebitAccountSubType field value
func (o *LedgerTransactionRuleParams) GetDebitAccountSubType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DebitAccountSubType
}

// GetDebitAccountSubTypeOk returns a tuple with the DebitAccountSubType field value
// and a boolean to check if the value has been set.
func (o *LedgerTransactionRuleParams) GetDebitAccountSubTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DebitAccountSubType, true
}

// SetDebitAccountSubType sets field value
func (o *LedgerTransactionRuleParams) SetDebitAccountSubType(v string) {
	o.DebitAccountSubType = v
}

// GetDebitAccountType returns the DebitAccountType field value
func (o *LedgerTransactionRuleParams) GetDebitAccountType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DebitAccountType
}

// GetDebitAccountTypeOk returns a tuple with the DebitAccountType field value
// and a boolean to check if the value has been set.
func (o *LedgerTransactionRuleParams) GetDebitAccountTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DebitAccountType, true
}

// SetDebitAccountType sets field value
func (o *LedgerTransactionRuleParams) SetDebitAccountType(v string) {
	o.DebitAccountType = v
}

// GetEntryOrder returns the EntryOrder field value
func (o *LedgerTransactionRuleParams) GetEntryOrder() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EntryOrder
}

// GetEntryOrderOk returns a tuple with the EntryOrder field value
// and a boolean to check if the value has been set.
func (o *LedgerTransactionRuleParams) GetEntryOrderOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryOrder, true
}

// SetEntryOrder sets field value
func (o *LedgerTransactionRuleParams) SetEntryOrder(v int32) {
	o.EntryOrder = v
}

// GetEntryType returns the EntryType field value
func (o *LedgerTransactionRuleParams) GetEntryType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryType
}

// GetEntryTypeOk returns a tuple with the EntryType field value
// and a boolean to check if the value has been set.
func (o *LedgerTransactionRuleParams) GetEntryTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryType, true
}

// SetEntryType sets field value
func (o *LedgerTransactionRuleParams) SetEntryType(v string) {
	o.EntryType = v
}

// GetMessageType returns the MessageType field value
func (o *LedgerTransactionRuleParams) GetMessageType() LedgerMessageType {
	if o == nil {
		var ret LedgerMessageType
		return ret
	}

	return o.MessageType
}

// GetMessageTypeOk returns a tuple with the MessageType field value
// and a boolean to check if the value has been set.
func (o *LedgerTransactionRuleParams) GetMessageTypeOk() (*LedgerMessageType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MessageType, true
}

// SetMessageType sets field value
func (o *LedgerTransactionRuleParams) SetMessageType(v LedgerMessageType) {
	o.MessageType = v
}

// GetParamAccount1Subtype returns the ParamAccount1Subtype field value if set, zero value otherwise.
func (o *LedgerTransactionRuleParams) GetParamAccount1Subtype() string {
	if o == nil || IsNil(o.ParamAccount1Subtype) {
		var ret string
		return ret
	}
	return *o.ParamAccount1Subtype
}

// GetParamAccount1SubtypeOk returns a tuple with the ParamAccount1Subtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerTransactionRuleParams) GetParamAccount1SubtypeOk() (*string, bool) {
	if o == nil || IsNil(o.ParamAccount1Subtype) {
		return nil, false
	}
	return o.ParamAccount1Subtype, true
}

// HasParamAccount1Subtype returns a boolean if a field has been set.
func (o *LedgerTransactionRuleParams) HasParamAccount1Subtype() bool {
	if o != nil && !IsNil(o.ParamAccount1Subtype) {
		return true
	}

	return false
}

// SetParamAccount1Subtype gets a reference to the given string and assigns it to the ParamAccount1Subtype field.
func (o *LedgerTransactionRuleParams) SetParamAccount1Subtype(v string) {
	o.ParamAccount1Subtype = &v
}

// GetParamAccount1Type returns the ParamAccount1Type field value if set, zero value otherwise.
func (o *LedgerTransactionRuleParams) GetParamAccount1Type() string {
	if o == nil || IsNil(o.ParamAccount1Type) {
		var ret string
		return ret
	}
	return *o.ParamAccount1Type
}

// GetParamAccount1TypeOk returns a tuple with the ParamAccount1Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerTransactionRuleParams) GetParamAccount1TypeOk() (*string, bool) {
	if o == nil || IsNil(o.ParamAccount1Type) {
		return nil, false
	}
	return o.ParamAccount1Type, true
}

// HasParamAccount1Type returns a boolean if a field has been set.
func (o *LedgerTransactionRuleParams) HasParamAccount1Type() bool {
	if o != nil && !IsNil(o.ParamAccount1Type) {
		return true
	}

	return false
}

// SetParamAccount1Type gets a reference to the given string and assigns it to the ParamAccount1Type field.
func (o *LedgerTransactionRuleParams) SetParamAccount1Type(v string) {
	o.ParamAccount1Type = &v
}

// GetParamAccount2Subtype returns the ParamAccount2Subtype field value if set, zero value otherwise.
func (o *LedgerTransactionRuleParams) GetParamAccount2Subtype() string {
	if o == nil || IsNil(o.ParamAccount2Subtype) {
		var ret string
		return ret
	}
	return *o.ParamAccount2Subtype
}

// GetParamAccount2SubtypeOk returns a tuple with the ParamAccount2Subtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerTransactionRuleParams) GetParamAccount2SubtypeOk() (*string, bool) {
	if o == nil || IsNil(o.ParamAccount2Subtype) {
		return nil, false
	}
	return o.ParamAccount2Subtype, true
}

// HasParamAccount2Subtype returns a boolean if a field has been set.
func (o *LedgerTransactionRuleParams) HasParamAccount2Subtype() bool {
	if o != nil && !IsNil(o.ParamAccount2Subtype) {
		return true
	}

	return false
}

// SetParamAccount2Subtype gets a reference to the given string and assigns it to the ParamAccount2Subtype field.
func (o *LedgerTransactionRuleParams) SetParamAccount2Subtype(v string) {
	o.ParamAccount2Subtype = &v
}

// GetParamAccount2Type returns the ParamAccount2Type field value if set, zero value otherwise.
func (o *LedgerTransactionRuleParams) GetParamAccount2Type() string {
	if o == nil || IsNil(o.ParamAccount2Type) {
		var ret string
		return ret
	}
	return *o.ParamAccount2Type
}

// GetParamAccount2TypeOk returns a tuple with the ParamAccount2Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LedgerTransactionRuleParams) GetParamAccount2TypeOk() (*string, bool) {
	if o == nil || IsNil(o.ParamAccount2Type) {
		return nil, false
	}
	return o.ParamAccount2Type, true
}

// HasParamAccount2Type returns a boolean if a field has been set.
func (o *LedgerTransactionRuleParams) HasParamAccount2Type() bool {
	if o != nil && !IsNil(o.ParamAccount2Type) {
		return true
	}

	return false
}

// SetParamAccount2Type gets a reference to the given string and assigns it to the ParamAccount2Type field.
func (o *LedgerTransactionRuleParams) SetParamAccount2Type(v string) {
	o.ParamAccount2Type = &v
}

// GetProcessType returns the ProcessType field value
func (o *LedgerTransactionRuleParams) GetProcessType() LedgerProcessType {
	if o == nil {
		var ret LedgerProcessType
		return ret
	}

	return o.ProcessType
}

// GetProcessTypeOk returns a tuple with the ProcessType field value
// and a boolean to check if the value has been set.
func (o *LedgerTransactionRuleParams) GetProcessTypeOk() (*LedgerProcessType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessType, true
}

// SetProcessType sets field value
func (o *LedgerTransactionRuleParams) SetProcessType(v LedgerProcessType) {
	o.ProcessType = v
}

// GetTransactionType returns the TransactionType field value
func (o *LedgerTransactionRuleParams) GetTransactionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionType
}

// GetTransactionTypeOk returns a tuple with the TransactionType field value
// and a boolean to check if the value has been set.
func (o *LedgerTransactionRuleParams) GetTransactionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionType, true
}

// SetTransactionType sets field value
func (o *LedgerTransactionRuleParams) SetTransactionType(v string) {
	o.TransactionType = v
}

func (o LedgerTransactionRuleParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LedgerTransactionRuleParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["creditAccountBalanceType"] = o.CreditAccountBalanceType
	toSerialize["creditAccountSubType"] = o.CreditAccountSubType
	toSerialize["creditAccountType"] = o.CreditAccountType
	toSerialize["debitAccountBalanceType"] = o.DebitAccountBalanceType
	toSerialize["debitAccountSubType"] = o.DebitAccountSubType
	toSerialize["debitAccountType"] = o.DebitAccountType
	toSerialize["entryOrder"] = o.EntryOrder
	toSerialize["entryType"] = o.EntryType
	toSerialize["messageType"] = o.MessageType
	if !IsNil(o.ParamAccount1Subtype) {
		toSerialize["paramAccount1Subtype"] = o.ParamAccount1Subtype
	}
	if !IsNil(o.ParamAccount1Type) {
		toSerialize["paramAccount1Type"] = o.ParamAccount1Type
	}
	if !IsNil(o.ParamAccount2Subtype) {
		toSerialize["paramAccount2Subtype"] = o.ParamAccount2Subtype
	}
	if !IsNil(o.ParamAccount2Type) {
		toSerialize["paramAccount2Type"] = o.ParamAccount2Type
	}
	toSerialize["processType"] = o.ProcessType
	toSerialize["transactionType"] = o.TransactionType
	return toSerialize, nil
}

type NullableLedgerTransactionRuleParams struct {
	value *LedgerTransactionRuleParams
	isSet bool
}

func (v NullableLedgerTransactionRuleParams) Get() *LedgerTransactionRuleParams {
	return v.value
}

func (v *NullableLedgerTransactionRuleParams) Set(val *LedgerTransactionRuleParams) {
	v.value = val
	v.isSet = true
}

func (v NullableLedgerTransactionRuleParams) IsSet() bool {
	return v.isSet
}

func (v *NullableLedgerTransactionRuleParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLedgerTransactionRuleParams(val *LedgerTransactionRuleParams) *NullableLedgerTransactionRuleParams {
	return &NullableLedgerTransactionRuleParams{value: val, isSet: true}
}

func (v NullableLedgerTransactionRuleParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLedgerTransactionRuleParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



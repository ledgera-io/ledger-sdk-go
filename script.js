/*
 * Ledgera core API
 * Ledgera servers.
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://github.com/OpenAPITools/openapi-generator
 *
 * OpenAPI generator version: 6.4.0
 */


import http from "k6/http";
import { group, check, sleep } from "k6";

const BASE_URL = "https://api.ledgera/";
// Sleep duration between successive requests.
// You might want to edit the value of this variable or remove calls to the sleep function on the script.
const SLEEP_DURATION = 0.1;
// Global variables should be initialized.

export default function() {
    group("/v1/currency", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/v1/currency`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2
        {
            let url = BASE_URL + `/v1/currency`;
            // TODO: edit the parameters of the request body.
            let body = {"code": "string", "name": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v1/account/{id}/balances", () => {
        let id = 'TODO_EDIT_THE_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/v1/account/${id}/balances`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v1/account-plan/{id}", () => {
        let id = 'TODO_EDIT_THE_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/v1/account-plan/${id}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2
        {
            let url = BASE_URL + `/v1/account-plan/${id}`;
            let request = http.del(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v1/transaction", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/v1/transaction`;
            // TODO: edit the parameters of the request body.
            let body = {"amount": "string", "currency": "string", "metadata": "object", "paramAccount1": "string", "paramAccount2": "string", "transactionId": "string", "transactionProcess": "string", "transactionType": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Created": (r) => r.status === 201
            });
        }
    });

    group("/v1/transaction/{id}", () => {
        let id = 'TODO_EDIT_THE_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/v1/transaction/${id}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v1/billing", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/v1/billing`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2
        {
            let url = BASE_URL + `/v1/billing`;
            // TODO: edit the parameters of the request body.
            let body = {"description": "string", "entries": "list", "expiration": "string", "isDefault": "boolean", "name": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Created": (r) => r.status === 201
            });
        }
    });

    group("/v1/billing/bulk", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/v1/billing/bulk`;
            // TODO: edit the parameters of the request body.
            let body = {"data": "list"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Created": (r) => r.status === 201
            });
        }
    });

    group("/v1/account/{id}/journal", () => {
        let cursor = 'TODO_EDIT_THE_CURSOR'; // specify value as there is no example value for this parameter in OpenAPI spec
        let dateTo = 'TODO_EDIT_THE_DATE_TO'; // specify value as there is no example value for this parameter in OpenAPI spec
        let limit = 'TODO_EDIT_THE_LIMIT'; // specify value as there is no example value for this parameter in OpenAPI spec
        let id = 'TODO_EDIT_THE_ID'; // specify value as there is no example value for this parameter in OpenAPI spec
        let dateFrom = 'TODO_EDIT_THE_DATE_FROM'; // specify value as there is no example value for this parameter in OpenAPI spec
        let type = 'TODO_EDIT_THE_TYPE'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/v1/account/${id}/journal?cursor=${cursor}&date_from=${date_from}&date_to=${date_to}&type=${type}&limit=${limit}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v1/account", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/v1/account`;
            // TODO: edit the parameters of the request body.
            let body = {"currencies": "list", "subType": "string", "type": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Created": (r) => r.status === 201
            });
        }
    });

    group("/v1/billing/{billingPlanId}", () => {
        let billingPlanId = 'TODO_EDIT_THE_BILLINGPLANID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/v1/billing/${billingPlanId}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2
        {
            let url = BASE_URL + `/v1/billing/${billingPlanId}`;
            let request = http.put(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v1/account-plan/bulk", () => {
        let id = 'TODO_EDIT_THE_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/v1/account-plan/bulk?id=${id}`;
            let request = http.post(url);

            check(request, {
                "Created": (r) => r.status === 201
            });
        }
    });

    group("/v1/account/{id}", () => {
        let id = 'TODO_EDIT_THE_ID'; // specify value as there is no example value for this parameter in OpenAPI spec

        // Request No. 1
        {
            let url = BASE_URL + `/v1/account/${id}`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });
        }
    });

    group("/v1/account-plan", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/v1/account-plan`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2
        {
            let url = BASE_URL + `/v1/account-plan`;
            // TODO: edit the parameters of the request body.
            let body = {"balanceType": "account_plan.balancetype", "balanceValidation": "string", "isUnique": "boolean", "subType": "string", "type": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Created": (r) => r.status === 201
            });
        }
    });

    group("/v1/transaction/raw", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/v1/transaction/raw`;
            // TODO: edit the parameters of the request body.
            let body = {"amount": "string", "currency": "string", "metadata": "object", "paramAccount1": "string", "paramAccount2": "string", "transactionId": "string", "transactionProcess": "string", "transactionType": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Created": (r) => r.status === 201
            });
        }
    });

    group("/v1/transaction/rule/bulk", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/v1/transaction/rule/bulk`;
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, params);

            check(request, {
                "Created": (r) => r.status === 201
            });
        }
    });

    group("/v1/transaction/rule", () => {

        // Request No. 1
        {
            let url = BASE_URL + `/v1/transaction/rule`;
            let request = http.get(url);

            check(request, {
                "OK": (r) => r.status === 200
            });

            sleep(SLEEP_DURATION);
        }

        // Request No. 2
        {
            let url = BASE_URL + `/v1/transaction/rule`;
            // TODO: edit the parameters of the request body.
            let body = {"creditAccountBalanceType": "string", "creditAccountSubType": "string", "creditAccountType": "string", "debitAccountBalanceType": "string", "debitAccountSubType": "string", "debitAccountType": "string", "entryOrder": "integer", "entryType": "string", "messageType": "ledger.messagetype", "paramAccount1Subtype": "string", "paramAccount1Type": "string", "paramAccount2Subtype": "string", "paramAccount2Type": "string", "processType": "ledger.processtype", "transactionType": "string"};
            let params = {headers: {"Content-Type": "application/json", "Accept": "application/json"}};
            let request = http.post(url, JSON.stringify(body), params);

            check(request, {
                "Created": (r) => r.status === 201
            });
        }
    });

}

/*
Ledgera core API

Ledgera servers.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ExceptionValidationDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExceptionValidationDetails{}

// ExceptionValidationDetails struct for ExceptionValidationDetails
type ExceptionValidationDetails struct {
	Constraint *string `json:"constraint,omitempty"`
	Description *string `json:"description,omitempty"`
	Field *string `json:"field,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewExceptionValidationDetails instantiates a new ExceptionValidationDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExceptionValidationDetails() *ExceptionValidationDetails {
	this := ExceptionValidationDetails{}
	return &this
}

// NewExceptionValidationDetailsWithDefaults instantiates a new ExceptionValidationDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExceptionValidationDetailsWithDefaults() *ExceptionValidationDetails {
	this := ExceptionValidationDetails{}
	return &this
}

// GetConstraint returns the Constraint field value if set, zero value otherwise.
func (o *ExceptionValidationDetails) GetConstraint() string {
	if o == nil || IsNil(o.Constraint) {
		var ret string
		return ret
	}
	return *o.Constraint
}

// GetConstraintOk returns a tuple with the Constraint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExceptionValidationDetails) GetConstraintOk() (*string, bool) {
	if o == nil || IsNil(o.Constraint) {
		return nil, false
	}
	return o.Constraint, true
}

// HasConstraint returns a boolean if a field has been set.
func (o *ExceptionValidationDetails) HasConstraint() bool {
	if o != nil && !IsNil(o.Constraint) {
		return true
	}

	return false
}

// SetConstraint gets a reference to the given string and assigns it to the Constraint field.
func (o *ExceptionValidationDetails) SetConstraint(v string) {
	o.Constraint = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ExceptionValidationDetails) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExceptionValidationDetails) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ExceptionValidationDetails) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ExceptionValidationDetails) SetDescription(v string) {
	o.Description = &v
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *ExceptionValidationDetails) GetField() string {
	if o == nil || IsNil(o.Field) {
		var ret string
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExceptionValidationDetails) GetFieldOk() (*string, bool) {
	if o == nil || IsNil(o.Field) {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *ExceptionValidationDetails) HasField() bool {
	if o != nil && !IsNil(o.Field) {
		return true
	}

	return false
}

// SetField gets a reference to the given string and assigns it to the Field field.
func (o *ExceptionValidationDetails) SetField(v string) {
	o.Field = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ExceptionValidationDetails) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExceptionValidationDetails) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ExceptionValidationDetails) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ExceptionValidationDetails) SetValue(v string) {
	o.Value = &v
}

func (o ExceptionValidationDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExceptionValidationDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Constraint) {
		toSerialize["constraint"] = o.Constraint
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Field) {
		toSerialize["field"] = o.Field
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableExceptionValidationDetails struct {
	value *ExceptionValidationDetails
	isSet bool
}

func (v NullableExceptionValidationDetails) Get() *ExceptionValidationDetails {
	return v.value
}

func (v *NullableExceptionValidationDetails) Set(val *ExceptionValidationDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableExceptionValidationDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableExceptionValidationDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExceptionValidationDetails(val *ExceptionValidationDetails) *NullableExceptionValidationDetails {
	return &NullableExceptionValidationDetails{value: val, isSet: true}
}

func (v NullableExceptionValidationDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExceptionValidationDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



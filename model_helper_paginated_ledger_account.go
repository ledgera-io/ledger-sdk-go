/*
Ledgera core API

Ledgera servers.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the HelperPaginatedLedgerAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HelperPaginatedLedgerAccount{}

// HelperPaginatedLedgerAccount struct for HelperPaginatedLedgerAccount
type HelperPaginatedLedgerAccount struct {
	Data *LedgerAccount `json:"data,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
}

// NewHelperPaginatedLedgerAccount instantiates a new HelperPaginatedLedgerAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHelperPaginatedLedgerAccount() *HelperPaginatedLedgerAccount {
	this := HelperPaginatedLedgerAccount{}
	return &this
}

// NewHelperPaginatedLedgerAccountWithDefaults instantiates a new HelperPaginatedLedgerAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHelperPaginatedLedgerAccountWithDefaults() *HelperPaginatedLedgerAccount {
	this := HelperPaginatedLedgerAccount{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *HelperPaginatedLedgerAccount) GetData() LedgerAccount {
	if o == nil || IsNil(o.Data) {
		var ret LedgerAccount
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelperPaginatedLedgerAccount) GetDataOk() (*LedgerAccount, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *HelperPaginatedLedgerAccount) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given LedgerAccount and assigns it to the Data field.
func (o *HelperPaginatedLedgerAccount) SetData(v LedgerAccount) {
	o.Data = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *HelperPaginatedLedgerAccount) GetMetadata() map[string]string {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HelperPaginatedLedgerAccount) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *HelperPaginatedLedgerAccount) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *HelperPaginatedLedgerAccount) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

func (o HelperPaginatedLedgerAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HelperPaginatedLedgerAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableHelperPaginatedLedgerAccount struct {
	value *HelperPaginatedLedgerAccount
	isSet bool
}

func (v NullableHelperPaginatedLedgerAccount) Get() *HelperPaginatedLedgerAccount {
	return v.value
}

func (v *NullableHelperPaginatedLedgerAccount) Set(val *HelperPaginatedLedgerAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableHelperPaginatedLedgerAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableHelperPaginatedLedgerAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHelperPaginatedLedgerAccount(val *HelperPaginatedLedgerAccount) *NullableHelperPaginatedLedgerAccount {
	return &NullableHelperPaginatedLedgerAccount{value: val, isSet: true}
}

func (v NullableHelperPaginatedLedgerAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHelperPaginatedLedgerAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


